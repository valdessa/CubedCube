#ifndef INCLUDE_KIRBY_INFO_H_
#define INCLUDE_KIRBY_INFO_H_ 1

#define MAX_BONE_INFLUENCE 4
struct Vertex {
    // position
    FVec3 Position;                             //Layout 0
    // normal
    FVec3 Normal;                               //Layout 1
    // texCoords    
    FVec2 UV;                                   //Layout 2
    // color
    FVec3 Color;                                //Layout 3
    //bone indexes which will influence this vertex
    int m_BoneIDs[MAX_BONE_INFLUENCE];          //Layout 6
    //weights from each bone
    float m_Weights[MAX_BONE_INFLUENCE];        //Layout 7
};

static const Vertex Mesh0[] = {
    {FVec3{100.000000f, 99.999985f, -100.000015f}, FVec3{0.000000f, 1.000000f, -0.000000f}, FVec2{0.992164f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 99.999985f, -100.000015f}, FVec3{0.000000f, 1.000000f, -0.000000f}, FVec2{0.992164f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 100.000015f, 99.999985f}, FVec3{0.000000f, 1.000000f, -0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, 100.000015f, 99.999985f}, FVec3{0.000000f, 1.000000f, -0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -99.999985f, 100.000015f}, FVec3{0.000000f, 0.000000f, 1.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, 100.000015f, 99.999985f}, FVec3{0.000000f, 0.000000f, 1.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 100.000015f, 99.999985f}, FVec3{0.000000f, 0.000000f, 1.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -99.999985f, 100.000015f}, FVec3{0.000000f, 0.000000f, 1.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -99.999985f, 100.000015f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.818346f, 0.698197f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 100.000015f, 99.999985f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.818346f, 0.833059f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 99.999985f, -100.000015f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.953209f, 0.833059f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -100.000015f, -99.999985f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.953209f, 0.698197f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -100.000015f, -99.999985f}, FVec3{0.000000f, -1.000000f, 0.000000f}, FVec2{0.992164f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -100.000015f, -99.999985f}, FVec3{0.000000f, -1.000000f, 0.000000f}, FVec2{0.992164f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -99.999985f, 100.000015f}, FVec3{0.000000f, -1.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -99.999985f, 100.000015f}, FVec3{0.000000f, -1.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -100.000015f, -99.999985f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.992164f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, 99.999985f, -100.000015f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.992164f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, 100.000015f, 99.999985f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -99.999985f, 100.000015f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, -100.000015f, -99.999985f}, FVec3{0.000000f, -0.000000f, -1.000000f}, FVec2{0.992164f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-100.000000f, 99.999985f, -100.000015f}, FVec3{0.000000f, -0.000000f, -1.000000f}, FVec2{0.992164f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, 99.999985f, -100.000015f}, FVec3{0.000000f, -0.000000f, -1.000000f}, FVec2{0.992164f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{100.000000f, -100.000015f, -99.999985f}, FVec3{0.000000f, -0.000000f, -1.000000f}, FVec2{0.992164f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
};

static const Vertex Mesh1[] = {
    {FVec3{35.788811f, -14.856254f, 37.197723f}, FVec3{0.000000f, 0.470900f, -0.882187f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -14.856254f, 37.197723f}, FVec3{0.000000f, 0.470900f, -0.882187f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 53.196823f, 73.523590f}, FVec3{0.000000f, 0.470900f, -0.882187f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 53.196823f, 73.523590f}, FVec3{0.000000f, 0.470900f, -0.882187f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, -63.210285f, 127.784409f}, FVec3{0.000000f, -0.470900f, 0.882187f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 4.842795f, 164.110291f}, FVec3{0.000000f, -0.470900f, 0.882187f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 4.842795f, 164.110291f}, FVec3{0.000000f, -0.470900f, 0.882187f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -63.210285f, 127.784409f}, FVec3{0.000000f, -0.470900f, 0.882187f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -14.856254f, 37.197723f}, FVec3{0.000000f, -0.882187f, -0.470900f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, -14.856254f, 37.197723f}, FVec3{0.000000f, -0.882187f, -0.470900f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, -63.210285f, 127.784409f}, FVec3{0.000000f, -0.882187f, -0.470900f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -63.210285f, 127.784409f}, FVec3{0.000000f, -0.882187f, -0.470900f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, -14.856254f, 37.197723f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 53.196823f, 73.523590f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 4.842795f, 164.110291f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, -63.210285f, 127.784409f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 53.196823f, 73.523590f}, FVec3{0.000000f, 0.882187f, 0.470900f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 53.196823f, 73.523590f}, FVec3{0.000000f, 0.882187f, 0.470900f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 4.842795f, 164.110291f}, FVec3{0.000000f, 0.882187f, 0.470900f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{35.788811f, 4.842795f, 164.110291f}, FVec3{0.000000f, 0.882187f, 0.470900f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 53.196823f, 73.523590f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -14.856254f, 37.197723f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, -63.210285f, 127.784409f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-41.352554f, 4.842795f, 164.110291f}, FVec3{-1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {1, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
};

static const Vertex Mesh2[] = {
    {FVec3{41.937729f, -5.805171f, -37.683075f}, FVec3{-0.000000f, 0.587178f, 0.809458f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937721f, 56.637493f, -82.978806f}, FVec3{-0.000000f, 0.587178f, 0.809458f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203644f, 56.637486f, -82.978806f}, FVec3{-0.000000f, 0.587178f, 0.809458f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -5.805179f, -37.683075f}, FVec3{-0.000000f, 0.587178f, 0.809458f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937737f, -66.099144f, -120.801636f}, FVec3{0.000000f, -0.587178f, -0.809458f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203629f, -66.099152f, -120.801636f}, FVec3{0.000000f, -0.587178f, -0.809458f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -3.656489f, -166.097382f}, FVec3{0.000000f, -0.587178f, -0.809458f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937729f, -3.656482f, -166.097382f}, FVec3{0.000000f, -0.587178f, -0.809458f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -5.805179f, -37.683075f}, FVec3{0.000000f, -0.809458f, 0.587178f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203629f, -66.099152f, -120.801636f}, FVec3{0.000000f, -0.809458f, 0.587178f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937737f, -66.099144f, -120.801636f}, FVec3{0.000000f, -0.809458f, 0.587178f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937729f, -5.805171f, -37.683075f}, FVec3{0.000000f, -0.809458f, 0.587178f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937729f, -5.805171f, -37.683075f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937737f, -66.099144f, -120.801636f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937729f, -3.656482f, -166.097382f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937721f, 56.637493f, -82.978806f}, FVec3{1.000000f, 0.000000f, 0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937721f, 56.637493f, -82.978806f}, FVec3{-0.000000f, 0.809458f, -0.587178f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{41.937729f, -3.656482f, -166.097382f}, FVec3{-0.000000f, 0.809458f, -0.587178f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -3.656489f, -166.097382f}, FVec3{-0.000000f, 0.809458f, -0.587178f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203644f, 56.637486f, -82.978806f}, FVec3{-0.000000f, 0.809458f, -0.587178f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203644f, 56.637486f, -82.978806f}, FVec3{-1.000000f, -0.000000f, -0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -3.656489f, -166.097382f}, FVec3{-1.000000f, -0.000000f, -0.000000f}, FVec2{0.001784f, 0.992593f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203629f, -66.099152f, -120.801636f}, FVec3{-1.000000f, -0.000000f, -0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-35.203636f, -5.805179f, -37.683075f}, FVec3{-1.000000f, -0.000000f, -0.000000f}, FVec2{0.001784f, 0.002212f}, FVec3{1.000000f, 1.000000f, 1.000000f}, {0, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
};

static const Vertex Mesh3[] = {
    {FVec3{-9.502373f, -122.760696f, 3.265404f}, FVec3{-0.987327f, 0.107153f, -0.117059f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-20.255730f, -124.670731f, 92.215370f}, FVec3{-0.987327f, 0.107153f, -0.117059f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-16.561714f, -89.316055f, 93.421127f}, FVec3{-0.987327f, 0.107153f, -0.117059f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-5.808357f, -87.406021f, 4.471161f}, FVec3{-0.987327f, 0.107153f, -0.117059f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.739410f, -139.608795f, 21.671135f}, FVec3{0.987327f, -0.107153f, 0.117059f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{149.433441f, -104.254120f, 22.876892f}, FVec3{0.987327f, -0.107153f, 0.117059f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{138.680084f, -106.164154f, 111.826859f}, FVec3{0.987327f, -0.107153f, 0.117059f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{134.986053f, -141.518829f, 110.621101f}, FVec3{0.987327f, -0.107153f, 0.117059f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-20.255730f, -124.670731f, 92.215370f}, FVec3{-0.103859f, -0.994014f, -0.033900f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-9.502373f, -122.760696f, 3.265404f}, FVec3{-0.103859f, -0.994014f, -0.033900f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.739410f, -139.608795f, 21.671135f}, FVec3{-0.103859f, -0.994014f, -0.033900f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{134.986053f, -141.518829f, 110.621101f}, FVec3{-0.103859f, -0.994014f, -0.033900f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-9.502373f, -122.760696f, 3.265404f}, FVec3{0.119991f, 0.021313f, -0.992546f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-5.808357f, -87.406021f, 4.471161f}, FVec3{0.119991f, 0.021313f, -0.992546f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{149.433441f, -104.254120f, 22.876892f}, FVec3{0.119991f, 0.021313f, -0.992546f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.739410f, -139.608795f, 21.671135f}, FVec3{0.119991f, 0.021313f, -0.992546f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-5.808357f, -87.406021f, 4.471161f}, FVec3{0.103859f, 0.994014f, 0.033900f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-16.561714f, -89.316055f, 93.421127f}, FVec3{0.103859f, 0.994014f, 0.033900f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{138.680084f, -106.164154f, 111.826859f}, FVec3{0.103859f, 0.994014f, 0.033900f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{149.433441f, -104.254120f, 22.876892f}, FVec3{0.103859f, 0.994014f, 0.033900f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-16.561714f, -89.316055f, 93.421127f}, FVec3{-0.119991f, -0.021313f, 0.992546f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-20.255730f, -124.670731f, 92.215370f}, FVec3{-0.119991f, -0.021313f, 0.992546f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{134.986053f, -141.518829f, 110.621101f}, FVec3{-0.119991f, -0.021313f, 0.992546f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{138.680084f, -106.164154f, 111.826859f}, FVec3{-0.119991f, -0.021313f, 0.992546f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
};

static const Vertex Mesh4[] = {
    {FVec3{-19.647224f, -124.562508f, -94.784424f}, FVec3{-0.989196f, 0.106822f, 0.100403f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-10.423958f, -122.924248f, -5.657391f}, FVec3{-0.989196f, 0.106822f, 0.100403f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-6.710640f, -87.566162f, -6.691586f}, FVec3{-0.989196f, 0.106822f, 0.100403f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-15.933907f, -89.204422f, -95.818619f}, FVec3{-0.989196f, 0.106822f, 0.100403f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{135.888336f, -141.358688f, -110.571205f}, FVec3{0.989196f, -0.106822f, -0.100403f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{139.601654f, -106.000603f, -111.605400f}, FVec3{0.989196f, -0.106822f, -0.100403f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{148.824921f, -104.362335f, -22.478371f}, FVec3{0.989196f, -0.106822f, -0.100403f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.111603f, -139.720428f, -21.444176f}, FVec3{0.989196f, -0.106822f, -0.100403f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-10.423958f, -122.924248f, -5.657391f}, FVec3{-0.104402f, -0.994110f, 0.029077f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-19.647224f, -124.562508f, -94.784424f}, FVec3{-0.104402f, -0.994110f, 0.029077f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{135.888336f, -141.358688f, -110.571205f}, FVec3{-0.104402f, -0.994110f, 0.029077f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.111603f, -139.720428f, -21.444176f}, FVec3{-0.104402f, -0.994110f, 0.029077f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-19.647224f, -124.562508f, -94.784424f}, FVec3{-0.102918f, -0.018281f, -0.994522f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-15.933907f, -89.204422f, -95.818619f}, FVec3{-0.102918f, -0.018281f, -0.994522f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{139.601654f, -106.000603f, -111.605400f}, FVec3{-0.102918f, -0.018281f, -0.994522f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{135.888336f, -141.358688f, -110.571205f}, FVec3{-0.102918f, -0.018281f, -0.994522f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-15.933907f, -89.204422f, -95.818619f}, FVec3{0.104402f, 0.994110f, -0.029077f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-6.710640f, -87.566162f, -6.691586f}, FVec3{0.104402f, 0.994110f, -0.029077f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{148.824921f, -104.362335f, -22.478371f}, FVec3{0.104402f, 0.994110f, -0.029077f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{139.601654f, -106.000603f, -111.605400f}, FVec3{0.104402f, 0.994110f, -0.029077f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-6.710640f, -87.566162f, -6.691586f}, FVec3{0.102918f, 0.018281f, 0.994522f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{-10.423958f, -122.924248f, -5.657391f}, FVec3{0.102918f, 0.018281f, 0.994522f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{145.111603f, -139.720428f, -21.444176f}, FVec3{0.102918f, 0.018281f, 0.994522f}, FVec2{0.001784f, 0.002212f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
    {FVec3{148.824921f, -104.362335f, -22.478371f}, FVec3{0.102918f, 0.018281f, 0.994522f}, FVec2{0.001784f, 0.992593f}, FVec3{0.800000f, 0.000000f, 0.083349f}, {2, -1, -1, -1}, {1.000000f, 0.000000f, 0.000000f, 0.000000f}},
};

static const Vertex* VerticesKirbyFINAL[] = {
    Mesh0,
    Mesh1,
    Mesh2,
    Mesh3,
    Mesh4,
};

static const uint32_t MeshIndices0[] = {
    0,    1,    2,    0,    2,    3,    4,    5,    6,    4,
    6,    7,    8,    9,    10,    8,    10,    11,    12,    13,
    14,    12,    14,    15,    16,    17,    18,    16,    18,    19,
    20,    21,    22,    20,    22,    23,
};

static const uint32_t MeshIndices1[] = {
    0,    1,    2,    0,    2,    3,    4,    5,    6,    4,
    6,    7,    8,    9,    10,    8,    10,    11,    12,    13,
    14,    12,    14,    15,    16,    17,    18,    16,    18,    19,
    20,    21,    22,    20,    22,    23,
};

static const uint32_t MeshIndices2[] = {
    0,    1,    2,    0,    2,    3,    4,    5,    6,    4,
    6,    7,    8,    9,    10,    8,    10,    11,    12,    13,
    14,    12,    14,    15,    16,    17,    18,    16,    18,    19,
    20,    21,    22,    20,    22,    23,
};

static const uint32_t MeshIndices3[] = {
    0,    1,    2,    0,    2,    3,    4,    5,    6,    4,
    6,    7,    8,    9,    10,    8,    10,    11,    12,    13,
    14,    12,    14,    15,    16,    17,    18,    16,    18,    19,
    20,    21,    22,    20,    22,    23,
};

static const uint32_t MeshIndices4[] = {
    0,    1,    2,    0,    2,    3,    4,    5,    6,    4,
    6,    7,    8,    9,    10,    8,    10,    11,    12,    13,
    14,    12,    14,    15,    16,    17,    18,    16,    18,    19,
    20,    21,    22,    20,    22,    23,
};

static const uint32_t* IndicesKirbyFINAL[] = {
    MeshIndices0,
    MeshIndices1,
    MeshIndices2,
    MeshIndices3,
    MeshIndices4,
};

static constexpr uint8_t NumFrames = 56;
static constexpr uint8_t MAX_BONES = 3;
static constexpr size_t N_INDICES = 36;

static const FMat4 BoneTransformations[56][MAX_BONES] = {
    { // Frame 0
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000012f, 139.720413f, -0.000053f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000012f, 139.720413f, -0.000046f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000032f, 1.000000f},
    },
    { // Frame 1
        FMat4{1.000000f, 0.000000f, -0.000000f, 0.000000f, -0.000000f, 0.999978f, -0.006523f, 0.000000f, -0.000000f, 0.006523f, 0.999979f, 0.000000f, 0.000024f, 140.048309f, -0.276167f, 1.000000f},
        FMat4{1.000000f, 0.000000f, -0.000000f, 0.000000f, -0.000000f, 0.999978f, -0.006523f, 0.000000f, -0.000000f, 0.006523f, 0.999979f, 0.000000f, 0.000024f, 140.048813f, -0.199837f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000024f, 139.720383f, -0.000049f, 1.000000f},
    },
    { // Frame 2
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999915f, -0.013046f, 0.000000f, -0.000000f, 0.013045f, 0.999915f, 0.000000f, 0.000010f, 140.375702f, -0.552266f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999329f, -0.036622f, 0.000000f, -0.000000f, 0.036622f, 0.999329f, 0.000000f, 0.000010f, 138.239227f, -0.410667f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 3
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999808f, -0.019569f, 0.000000f, -0.000000f, 0.019569f, 0.999808f, 0.000000f, 0.000020f, 140.702499f, -0.828382f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994733f, -0.102502f, 0.000000f, -0.000000f, 0.102502f, 0.994733f, 0.000000f, 0.000020f, 133.171188f, -0.337059f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 4
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999659f, -0.026092f, 0.000000f, -0.000000f, 0.026092f, 0.999659f, 0.000000f, 0.000010f, 141.028763f, -1.104483f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.985673f, -0.168665f, 0.000000f, -0.000000f, 0.168665f, 0.985673f, 0.000000f, 0.000012f, 128.062012f, 0.177406f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000032f, 1.000000f},
    },
    { // Frame 5
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999468f, -0.032615f, 0.000000f, -0.000000f, 0.032615f, 0.999468f, 0.000000f, 0.000012f, 141.354462f, -1.380588f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.972068f, -0.234700f, 0.000000f, -0.000000f, 0.234700f, 0.972068f, 0.000000f, 0.000012f, 122.954727f, 1.193222f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000032f, 1.000000f},
    },
    { // Frame 6
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999234f, -0.039136f, 0.000000f, -0.000000f, 0.039136f, 0.999234f, 0.000000f, 0.000028f, 141.679596f, -1.656691f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.953882f, -0.300182f, 0.000000f, -0.000000f, 0.300182f, 0.953882f, 0.000000f, 0.000028f, 117.891533f, 2.664162f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 7
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.998957f, -0.045657f, 0.000000f, -0.000000f, 0.045656f, 0.998957f, 0.000000f, 0.000020f, 142.004181f, -1.932758f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.931135f, -0.364675f, 0.000000f, -0.000000f, 0.364674f, 0.931135f, 0.000000f, 0.000020f, 112.916649f, 4.589554f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 8
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.998638f, -0.052175f, 0.000000f, -0.000000f, 0.052175f, 0.998638f, 0.000000f, 0.000020f, 142.328201f, -2.208805f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.903900f, -0.427745f, 0.000000f, -0.000000f, 0.427744f, 0.903900f, 0.000000f, 0.000019f, 108.074409f, 6.963203f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 9
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.998276f, -0.058691f, 0.000000f, -0.000000f, 0.058691f, 0.998276f, 0.000000f, 0.000021f, 142.651657f, -2.484826f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.872303f, -0.488965f, 0.000000f, -0.000000f, 0.488965f, 0.872303f, 0.000000f, 0.000017f, 103.408554f, 9.773308f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 10
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997872f, -0.065204f, 0.000000f, -0.000000f, 0.065204f, 0.997872f, 0.000000f, 0.000028f, 142.974579f, -2.760815f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.836527f, -0.547925f, 0.000000f, -0.000000f, 0.547925f, 0.836527f, 0.000000f, 0.000028f, 98.961212f, 13.002625f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000024f, 139.720383f, -0.000049f, 1.000000f},
    },
    { // Frame 11
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997425f, -0.071715f, 0.000000f, -0.000000f, 0.071715f, 0.997425f, 0.000000f, 0.000011f, 143.296951f, -3.036752f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.796802f, -0.604241f, 0.000000f, -0.000000f, 0.604241f, 0.796802f, 0.000000f, 0.000018f, 94.772202f, 16.628792f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 12
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996936f, -0.078222f, 0.000000f, -0.000000f, 0.078222f, 0.996936f, 0.000000f, 0.000021f, 143.618744f, -3.312656f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.753404f, -0.657558f, 0.000000f, -0.000000f, 0.657558f, 0.753404f, 0.000000f, 0.000015f, 90.878120f, 20.624535f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 13
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996404f, -0.084725f, 0.000000f, -0.000000f, 0.084725f, 0.996404f, 0.000000f, 0.000021f, 143.939972f, -3.588505f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.706650f, -0.707563f, 0.000000f, -0.000000f, 0.707563f, 0.706650f, 0.000000f, 0.000018f, 87.311699f, 24.958580f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000041f, 1.000000f},
    },
    { // Frame 14
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995830f, -0.091224f, 0.000000f, -0.000000f, 0.091224f, 0.995830f, 0.000000f, 0.000021f, 144.260681f, -3.864297f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.656890f, -0.753986f, 0.000000f, -0.000000f, 0.753986f, 0.656890f, 0.000000f, 0.000013f, 84.101402f, 29.595993f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 15
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995214f, -0.097718f, 0.000000f, -0.000000f, 0.097718f, 0.995214f, 0.000000f, 0.000011f, 144.580811f, -4.140022f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.604500f, -0.796605f, 0.000000f, -0.000000f, 0.796605f, 0.604500f, 0.000000f, 0.000016f, 81.270744f, 34.499176f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 16
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994556f, -0.104207f, 0.000000f, -0.000000f, 0.104207f, 0.994555f, 0.000000f, 0.000012f, 144.900421f, -4.415687f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.549873f, -0.835248f, 0.000000f, -0.000000f, 0.835248f, 0.549873f, 0.000000f, 0.000012f, 78.838158f, 39.628609f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 17
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.994826f, -0.101596f, 0.000000f, -0.000000f, 0.101596f, 0.994826f, 0.000000f, 0.000031f, 144.734680f, -4.381534f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.501345f, -0.865247f, 0.000000f, -0.000000f, 0.865247f, 0.501345f, 0.000000f, 0.000007f, 75.867004f, 44.488205f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 18
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995089f, -0.098983f, 0.000000f, -0.000000f, 0.098983f, 0.995089f, 0.000000f, 0.000021f, 144.568893f, -4.347352f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.495620f, -0.868539f, 0.000000f, -0.000000f, 0.868539f, 0.495620f, 0.000000f, 0.000012f, 75.475082f, 45.092571f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 19
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.995345f, -0.096370f, 0.000000f, -0.000000f, 0.096370f, 0.995345f, 0.000000f, 0.000030f, 144.402985f, -4.313176f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.553941f, -0.832556f, 0.000000f, -0.000000f, 0.832555f, 0.553941f, 0.000000f, 0.000016f, 78.871338f, 39.323940f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 20
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995595f, -0.093757f, 0.000000f, -0.000000f, 0.093757f, 0.995595f, 0.000000f, 0.000020f, 144.237000f, -4.278979f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.610056f, -0.792358f, 0.000000f, -0.000000f, 0.792358f, 0.610056f, 0.000000f, 0.000015f, 82.690437f, 33.791374f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 21
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995838f, -0.091142f, 0.000000f, -0.000000f, 0.091142f, 0.995838f, 0.000000f, 0.000021f, 144.070923f, -4.244778f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.663532f, -0.748148f, 0.000000f, -0.000000f, 0.748148f, 0.663532f, 0.000000f, 0.000013f, 86.910591f, 28.538490f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 22
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.996073f, -0.088527f, 0.000000f, -0.000000f, 0.088527f, 0.996074f, 0.000000f, 0.000022f, 143.904755f, -4.210566f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.713960f, -0.700187f, 0.000000f, -0.000000f, 0.700186f, 0.713960f, 0.000000f, 0.000015f, 91.504074f, 23.606033f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 23
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996303f, -0.085912f, 0.000000f, -0.000000f, 0.085912f, 0.996303f, 0.000000f, 0.000003f, 143.738541f, -4.176354f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.760969f, -0.648789f, 0.000000f, -0.000000f, 0.648789f, 0.760969f, 0.000000f, 0.000010f, 96.437820f, 19.030983f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, -0.000000f, 139.720413f, -0.000044f, 1.000000f},
    },
    { // Frame 24
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996525f, -0.083295f, 0.000000f, -0.000000f, 0.083295f, 0.996525f, 0.000000f, 0.000012f, 143.572189f, -4.142122f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.804232f, -0.594315f, 0.000000f, -0.000000f, 0.594315f, 0.804232f, 0.000000f, 0.000013f, 101.673996f, 14.845573f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 25
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996740f, -0.080679f, 0.000000f, -0.000000f, 0.080679f, 0.996740f, 0.000000f, 0.000012f, 143.405762f, -4.107887f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.843475f, -0.537168f, 0.000000f, -0.000000f, 0.537168f, 0.843475f, 0.000000f, 0.000014f, 107.170967f, 11.076660f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 26
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996948f, -0.078061f, 0.000000f, -0.000000f, 0.078061f, 0.996948f, 0.000000f, 0.000020f, 143.239212f, -4.073650f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.878480f, -0.477778f, 0.000000f, -0.000000f, 0.477778f, 0.878480f, 0.000000f, 0.000019f, 112.884178f, 7.745155f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000041f, 1.000000f},
    },
    { // Frame 27
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997150f, -0.075444f, 0.000000f, -0.000000f, 0.075443f, 0.997150f, 0.000000f, 0.000011f, 143.072617f, -4.039401f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.909092f, -0.416596f, 0.000000f, -0.000000f, 0.416596f, 0.909092f, 0.000000f, 0.000014f, 118.767273f, 4.865707f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 28
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997344f, -0.072825f, 0.000000f, -0.000000f, 0.072825f, 0.997345f, 0.000000f, 0.000020f, 142.905899f, -4.005152f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.895529f, -0.445003f, 0.000000f, -0.000000f, 0.445003f, 0.895529f, 0.000000f, 0.000021f, 115.397408f, 6.230232f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 29
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997437f, -0.071554f, 0.000000f, -0.000000f, 0.071554f, 0.997437f, 0.000000f, 0.000012f, 143.014664f, -3.992308f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.868165f, -0.496275f, 0.000000f, -0.000000f, 0.496275f, 0.868165f, 0.000000f, 0.000011f, 110.073097f, 8.893036f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 30
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997133f, -0.075674f, 0.000000f, -0.000000f, 0.075674f, 0.997133f, 0.000000f, 0.000013f, 143.118347f, -4.044313f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.834706f, -0.550696f, 0.000000f, -0.000000f, 0.550696f, 0.834706f, 0.000000f, 0.000008f, 104.960770f, 12.020203f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 31
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996811f, -0.079792f, 0.000000f, -0.000000f, 0.079792f, 0.996811f, 0.000000f, 0.000020f, 143.221802f, -4.096296f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.797684f, -0.603075f, 0.000000f, -0.000000f, 0.603075f, 0.797684f, 0.000000f, 0.000021f, 100.045654f, 15.514343f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 32
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996473f, -0.083909f, 0.000000f, -0.000000f, 0.083909f, 0.996473f, 0.000000f, 0.000021f, 143.425690f, -4.150156f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.757281f, -0.653089f, 0.000000f, -0.000000f, 0.653089f, 0.757281f, 0.000000f, 0.000017f, 95.461960f, 19.356125f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 33
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996118f, -0.088025f, 0.000000f, -0.000000f, 0.088025f, 0.996118f, 0.000000f, 0.000020f, 143.629349f, -4.203998f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.713717f, -0.700434f, 0.000000f, -0.000000f, 0.700434f, 0.713717f, 0.000000f, 0.000021f, 91.140503f, 23.525803f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 34
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995746f, -0.092139f, 0.000000f, -0.000000f, 0.092139f, 0.995746f, 0.000000f, 0.000020f, 143.832794f, -4.257821f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.667247f, -0.744836f, 0.000000f, -0.000000f, 0.744836f, 0.667247f, 0.000000f, 0.000019f, 87.110023f, 27.998161f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 35
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995357f, -0.096252f, 0.000000f, -0.000000f, 0.096252f, 0.995357f, 0.000000f, 0.000021f, 144.036011f, -4.311626f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.618157f, -0.786054f, 0.000000f, -0.000000f, 0.786054f, 0.618157f, 0.000000f, 0.000017f, 83.395821f, 32.744804f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 36
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994951f, -0.100363f, 0.000000f, -0.000000f, 0.100363f, 0.994951f, 0.000000f, 0.000020f, 144.238998f, -4.365405f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.566758f, -0.823884f, 0.000000f, -0.000000f, 0.823884f, 0.566758f, 0.000000f, 0.000013f, 80.019615f, 37.734619f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 37
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.994528f, -0.104473f, 0.000000f, -0.000000f, 0.104473f, 0.994528f, 0.000000f, 0.000030f, 144.441772f, -4.419171f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.513381f, -0.858161f, 0.000000f, -0.000000f, 0.858161f, 0.513381f, 0.000000f, 0.000018f, 76.999115f, 42.934437f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 38
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994087f, -0.108580f, 0.000000f, -0.000000f, 0.108580f, 0.994088f, 0.000000f, 0.000028f, 144.644318f, -4.472901f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.496705f, -0.867919f, 0.000000f, -0.000000f, 0.867919f, 0.496705f, 0.000000f, 0.000029f, 76.351257f, 44.488556f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 39
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.993631f, -0.112685f, 0.000000f, -0.000000f, 0.112685f, 0.993631f, 0.000000f, 0.000030f, 144.846649f, -4.526601f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.536691f, -0.843778f, 0.000000f, -0.000000f, 0.843778f, 0.536691f, 0.000000f, 0.000012f, 78.974495f, 40.406094f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 40
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994137f, -0.108125f, 0.000000f, -0.000000f, 0.108125f, 0.994137f, 0.000000f, 0.000012f, 144.644882f, -4.321595f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.583056f, -0.812432f, 0.000000f, -0.000000f, 0.812432f, 0.583055f, 0.000000f, 0.000011f, 81.056206f, 36.112701f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 41
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.994846f, -0.101394f, 0.000000f, -0.000000f, 0.101394f, 0.994846f, 0.000000f, 0.000013f, 144.341583f, -4.051839f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.629666f, -0.776866f, 0.000000f, -0.000000f, 0.776866f, 0.629666f, 0.000000f, 0.000009f, 83.242935f, 31.899323f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000036f, 1.000000f},
    },
    { // Frame 42
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.995510f, -0.094656f, 0.000000f, -0.000000f, 0.094657f, 0.995510f, 0.000000f, 0.000020f, 144.037689f, -3.782017f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.674421f, -0.738346f, 0.000000f, -0.000000f, 0.738346f, 0.674422f, 0.000000f, 0.000019f, 85.723259f, 27.870857f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 43
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996128f, -0.087914f, 0.000000f, -0.000000f, 0.087914f, 0.996128f, 0.000000f, 0.000021f, 143.733185f, -3.512127f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.717072f, -0.696999f, 0.000000f, -0.000000f, 0.696999f, 0.717072f, 0.000000f, 0.000015f, 88.474915f, 23.953224f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 44
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.996700f, -0.081167f, 0.000000f, -0.000000f, 0.081167f, 0.996700f, 0.000000f, 0.000020f, 143.428116f, -3.242167f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.757378f, -0.652977f, 0.000000f, -0.000000f, 0.652977f, 0.757378f, 0.000000f, 0.000017f, 91.491783f, 20.269623f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 45
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997227f, -0.074415f, 0.000000f, -0.000000f, 0.074415f, 0.997227f, 0.000000f, 0.000020f, 143.122437f, -2.972153f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.795112f, -0.606462f, 0.000000f, -0.000000f, 0.606462f, 0.795112f, 0.000000f, 0.000022f, 94.754974f, 16.842461f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 46
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.997708f, -0.067660f, 0.000000f, -0.000000f, 0.067660f, 0.997708f, 0.000000f, 0.000019f, 142.816147f, -2.702091f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.830070f, -0.557658f, 0.000000f, -0.000000f, 0.557658f, 0.830070f, 0.000000f, 0.000022f, 98.243164f, 13.692131f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 47
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.998143f, -0.060902f, 0.000000f, -0.000000f, 0.060902f, 0.998143f, 0.000000f, 0.000021f, 142.509277f, -2.431987f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.862068f, -0.506793f, 0.000000f, -0.000000f, 0.506792f, 0.862068f, 0.000000f, 0.000016f, 101.932922f, 10.836784f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 48
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.998533f, -0.054140f, 0.000000f, -0.000000f, 0.054140f, 0.998533f, 0.000000f, 0.000020f, 142.201797f, -2.161843f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.890945f, -0.454110f, 0.000000f, -0.000000f, 0.454110f, 0.890945f, 0.000000f, 0.000020f, 105.798843f, 8.291893f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 49
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.998877f, -0.047376f, 0.000000f, -0.000000f, 0.047376f, 0.998877f, 0.000000f, 0.000020f, 141.893707f, -1.891665f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.916571f, -0.399871f, 0.000000f, -0.000000f, 0.399871f, 0.916571f, 0.000000f, 0.000019f, 109.814117f, 6.070190f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000016f, 139.720383f, -0.000040f, 1.000000f},
    },
    { // Frame 50
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.999175f, -0.040611f, 0.000000f, -0.000000f, 0.040611f, 0.999175f, 0.000000f, 0.000029f, 141.585037f, -1.621473f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.938841f, -0.344350f, 0.000000f, -0.000000f, 0.344350f, 0.938841f, 0.000000f, 0.000026f, 113.950851f, 4.181435f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000025f, 139.720383f, -0.000045f, 1.000000f},
    },
    { // Frame 51
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999427f, -0.033843f, 0.000000f, -0.000000f, 0.033843f, 0.999427f, 0.000000f, 0.000010f, 141.275787f, -1.351240f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.957683f, -0.287825f, 0.000000f, -0.000000f, 0.287825f, 0.957683f, 0.000000f, 0.000014f, 118.180412f, 2.632294f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 52
        FMat4{1.000000f, 0.000000f, -0.000000f, 0.000000f, -0.000000f, 0.999633f, -0.027075f, 0.000000f, -0.000000f, 0.027075f, 0.999633f, 0.000000f, 0.000002f, 140.965912f, -1.081012f, 1.000000f},
        FMat4{1.000000f, 0.000000f, -0.000000f, 0.000000f, -0.000000f, 0.973053f, -0.230582f, 0.000000f, -0.000000f, 0.230582f, 0.973053f, 0.000000f, 0.000006f, 122.473793f, 1.426331f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, -0.000000f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 53
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999794f, -0.020306f, 0.000000f, -0.000000f, 0.020306f, 0.999794f, 0.000000f, 0.000012f, 140.655426f, -0.810768f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.984939f, -0.172903f, 0.000000f, -0.000000f, 0.172902f, 0.984939f, 0.000000f, 0.000012f, 126.802284f, 0.564018f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000040f, 1.000000f},
    },
    { // Frame 54
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.999908f, -0.013537f, 0.000000f, -0.000000f, 0.013537f, 0.999908f, 0.000000f, 0.000010f, 140.344360f, -0.540520f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, -0.000000f, 0.993358f, -0.115067f, 0.000000f, -0.000000f, 0.115067f, 0.993358f, 0.000000f, 0.000012f, 131.137589f, 0.042862f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000008f, 139.720398f, -0.000032f, 1.000000f},
    },
    { // Frame 55
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.999977f, -0.006768f, 0.000000f, -0.000000f, 0.006768f, 0.999977f, 0.000000f, 0.000028f, 140.032684f, -0.270295f, 1.000000f},
        FMat4{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.998354f, -0.057346f, 0.000000f, -0.000000f, 0.057346f, 0.998354f, 0.000000f, 0.000028f, 135.452362f, -0.142517f, 1.000000f},
        FMat4{1.000000f, -0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, -0.000000f, 0.000000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000024f, 139.720383f, -0.000049f, 1.000000f},
    },
};

struct kirbyInfo {
    FVec3 Position = FVec3(0, 15, 0);
    FVec3 Rotation = FVec3{0, -90, 0};
};

struct AnimationData {
    Vector<Vector<FMat4>> boneTransformations; 
    uint8_t numFrames;  
};

#ifndef KIRBY_IN_DISPLAY_LIST
static U8 tileTexCoordsTriangle[6][2] = {  
    {1, 1},  // V 0 of Tri 1
    {1, 0},  // V 1 of Tri 1
    {0, 0},  // V 2 of Tri 1
    {1, 1},  // V 0 of Tri 2
    {0, 0},  // V 2 of Tri 2
    {0, 1},  // V 3 of Tri 2
};
#endif

u8 kirbyTexCoords[24];

struct FrameInterval {
    float start;
    float end;
    u8 frame;
};

// Lista de intervalos
// inline Vector<FrameInterval> intervals = {
//     {0.0f, 2.0f, 0},
//     {2.0f, 4.0f, 1},
//     {4.0f, 6.0f, 2},
//     {6.0f, 8.0f, 3},
//     {8.0f, 10.0f, 2},
//     {10.0f, 12.0f, 4},
//     {12.0f, 54.0f, 5},
//     {54.0f, NumFrames, 6},
// };

#ifdef KIRBY_IN_DISPLAY_LIST
static void* displayList = nullptr;
static U32 displayListSize = 0;
static u8 kirbyRowTexture = 4;
static u8 kirbyColumnTexture = 7;
//static Mtx MatricesInGC[3] ATTRIBUTE_ALIGN(32);
#endif

constexpr u8 GX_PNMTX_VALUES[] = {
    GX_PNMTX0, // 0 -> 0
    GX_PNMTX1, // 1 -> 3
    GX_PNMTX2, // 2 -> 6
    GX_PNMTX3, // 3 -> 9
    GX_PNMTX4, // 4 -> 12
    GX_PNMTX5, // 5 -> 15
    GX_PNMTX6, // 6 -> 18
    GX_PNMTX7, // 7 -> 21
    GX_PNMTX8, // 8 -> 24
    GX_PNMTX9  // 9 -> 27
};

constexpr u8 GetGXPNMTXValue(u8 index) {
    return GX_PNMTX_VALUES[index];
}

inline Vector<FrameInterval> intervals = {
    {0.0f, 2.0f, 0},
    {2.0f, 3.0f, 1},
    {3.0f, 4.0f, 2},
    {4.0f, 5.0f, 3},
    {5.0f, 6.0f, 2},
    {6.0f, 7.0f, 4},
    {7.0f, 54.0f, 5},
    {54.0f, NumFrames, 6},
};

static float currentFrame = 0;
static u8 frameToUse = 0;
static void updateKirbyAnimation() {
    for (const auto& interval : intervals) {
        if (currentFrame >= interval.start && currentFrame < interval.end) {
            frameToUse = interval.frame;
            break;
        }
    }

    currentFrame += Engine::getDeltaTime() * 30.0f;
    currentFrame = fmod(currentFrame, 56.0f);

#ifdef KIRBY_IN_DISPLAY_LIST
    //Kirby Face (Blink Anim)
    kirbyTexCoords[12]  = 1 + frameToUse;   
    kirbyTexCoords[14]  = 1 + frameToUse;   
    kirbyTexCoords[16]  = 0 + frameToUse;   
    kirbyTexCoords[18]  = 1 + frameToUse;   
    kirbyTexCoords[20]  = 0 + frameToUse;   
    kirbyTexCoords[22]  = 0 + frameToUse;   
#endif
}

// GX_SetVtxDesc(GX_POSMTXARRAY, GX_DIRECT);
// //GX_SetVtxAttrFmt(GX_VTXFMT0, GX_POSMTXARRAY, GX_POS_XYZ, GX_F32, 0); 
// GX_SetArray(GX_POSMTXARRAY, modelToFill, 1 * sizeof(Mtx));
// DCStoreRange(modelToFill, 1 * sizeof(Mtx));
// GX_InvVtxCache();
//         
// GX_LoadPosMtxIdx(0, GX_PNMTX0);

//works 2:
// GX_SetVtxDesc(GX_VA_PTNMTXIDX , GX_DIRECT);
// GX_SetArray(GX_POSMTXARRAY , modelToFill, 1 * sizeof(Mtx));
// DCStoreRange(modelToFill, 1 * sizeof(Mtx));
// GX_InvVtxCache();
// GX_LoadPosMtxIdx(0, GX_PNMTX0);
//GX_MatrixIndex1x8(0);



static void ConvertToGameCubeMatrix(const glm::mat4& glmMatrix, Mtx& gameCubeMatrix) {
    for (int row = 0; row < 3; ++row) {
        for (int col = 0; col < 4; ++col) {
            //gameCubeMatrix[row][col] = glmMatrix[row][col];
            gameCubeMatrix[row][col] = glmMatrix[col][row]; 
        }
    }
}
#include <malloc.h>

#ifdef KIRBY_IN_DISPLAY_LIST
static void drawKirbyForDisplayListInside() {
    for(u8 j = 0; j < 5; j++) {
        bool texture =  j == 0 ? true : false;
        if(j <= 1) {
#ifdef OPTIMIZATION_NO_LIGHTNING_DATA
            Renderer::PrepareToRenderInVX0(true, false, !texture, texture);
#else
            Renderer::PrepareToRenderInVX0(true, true, !texture, texture);
#endif
            GX_SetVtxDesc(GX_VA_PTNMTXIDX , GX_DIRECT);
            if(texture) {
                GX_SetVtxDesc(GX_VA_TEX0, GX_INDEX8);
                //todo: this will not work with lightning!!
                GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_REG, GX_SRC_REG, 0, GX_DF_NONE, GX_AF_NONE);
            }else {
                GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_VTX, GX_SRC_VTX, 0, GX_DF_NONE, GX_AF_NONE);
            }
        }
        
        GX_Begin(GX_TRIANGLES, GX_VTXFMT0, N_INDICES);
        for (u8 i = 0; i < N_INDICES; i++) {
            unsigned int index = IndicesKirbyFINAL[j][i];
            const auto& vertex = VerticesKirbyFINAL[j][index];
            
            FVec3 finalPosition = vertex.Position;
        
            s8 boneID = static_cast<s8>(vertex.m_BoneIDs[0]);
            if (boneID != -1) finalPosition = finalPosition * vertex.m_Weights[0];
            
            u8 textureIndex = i % 6;
            u8 faceIndex = i / 6;

            GX_MatrixIndex1x8(boneID * 3);
            GX_Position3f32(finalPosition[0], finalPosition[1], finalPosition[2]);
#ifndef OPTIMIZATION_NO_LIGHTNING_DATA
            GX_Normal3f32(vertex.Normal[0], vertex.Normal[1], vertex.Normal[2]);
#endif
            switch (j) {
            case 0: //GX_TexCoord2u8(tileTexCoordsTriangle[textureIndex][0] + (faceIndex == 4 ? frameToUse : 7),  tileTexCoordsTriangle[textureIndex][1] + 4);
                // if(faceIndex == 4) GX_TexCoord1x8(textureIndex + 6);
                // else GX_TexCoord1x8(textureIndex);
                    GX_TexCoord1x8(textureIndex + (faceIndex == 4) * 6);
                break;
            case 1: GX_Color4u8(255, 171, 224, 255);
                break;
            case 2: GX_Color4u8(255, 171, 224, 255);
                break;
            case 3: GX_Color4u8(204, 0, 21, 255);
                break;
            case 4: GX_Color4u8(204, 0, 21, 255);
                break;
            default: ;
            }
        }
        GX_End();
    }
}

Mtx MatricesInGC2[MAX_KIRBY][3] ATTRIBUTE_ALIGN(32);;

static void drawKirbyForDisplayList(Mtx& modelToFill, u8 offset) {
    auto& finalBonesMatrices = BoneTransformations[static_cast<uint32_t>(currentFrame) % NumFrames];
    auto& MatricesInGC = MatricesInGC2[offset];
    for(int i = 0; i < 3; i++) {
        //guMtxIdentity(MatricesInGC[i]);
        ConvertToGameCubeMatrix(finalBonesMatrices[i], MatricesInGC[i]);
        guMtxConcat(modelToFill, MatricesInGC[i], MatricesInGC[i]);
    }
    //GX_ClearVtxDesc();

    
    GX_SetArray(GX_POSMTXARRAY , MatricesInGC, 1 * sizeof(Mtx));
    DCFlushRange(MatricesInGC, 3 * sizeof(Mtx));
    GX_InvVtxCache();
    
    GX_SetArray(GX_VA_TEX0, kirbyTexCoords, 2 * sizeof(u8));
    DCFlushRange(kirbyTexCoords, 24 * sizeof(u8));
    GX_InvVtxCache();
    
    GX_LoadPosMtxIdx(0, GX_PNMTX0);
    GX_LoadPosMtxIdx(1, GX_PNMTX1);
    GX_LoadPosMtxIdx(2, GX_PNMTX2);

    GX_CallDispList(displayList, displayListSize);
    
    //free(MatricesInGC);
}
#else

static void drawKirbyDirect(Mtx& modelToFill) {
    GX_LoadPosMtxImm(modelToFill, GX_PNMTX0);
    auto& finalBonesMatrices = BoneTransformations[static_cast<uint32_t>(currentFrame) % NumFrames];
    
    for(u8 j = 0; j < 5; j++) {
        bool texture =  j == 0 ? true : false;
        if(j <= 1) {
#ifdef OPTIMIZATION_NO_LIGHTNING_DATA
            Renderer::PrepareToRenderInVX0(true, false, !texture, texture);
#else
            Renderer::PrepareToRenderInVX0(true, true, !texture, texture);
#endif
            if(texture) {
                //todo: this will not work with lightning!!
                GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_REG, GX_SRC_REG, 0, GX_DF_NONE, GX_AF_NONE);
            }else {
                GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_VTX, GX_SRC_VTX, 0, GX_DF_NONE, GX_AF_NONE);
            }
        }
        GX_Begin(GX_TRIANGLES, GX_VTXFMT0, N_INDICES);
        for (u8 i = 0; i < N_INDICES; i++) {
            unsigned int index = IndicesKirbyFINAL[j][i];
            const auto& vertex = VerticesKirbyFINAL[j][index];

            FVec4 position = FVec4(vertex.Position, 1.0f);
            FVec4 finalPosition = position;

            s8 boneID = static_cast<s8>(vertex.m_BoneIDs[0]);
            if (boneID != -1) {
                const auto& boneMatrix = finalBonesMatrices[boneID];
                glm::vec4 localPosition = boneMatrix * position;
                finalPosition = localPosition * vertex.m_Weights[0];
            }
            
            auto result = i % 6;
            size_t faceIndex = i / 6;
            GX_Position3f32(finalPosition[0], finalPosition[1], finalPosition[2]);
            //GX_Position3f32(vertex.Position[0], vertex.Position[1], vertex.Position[2]);
#ifndef OPTIMIZATION_NO_LIGHTNING_DATA
            GX_Normal3f32(vertex.Normal[0], vertex.Normal[1], vertex.Normal[2]);
#endif
            switch (j) {
                case 0: GX_TexCoord2u8(tileTexCoordsTriangle[result][0] + (faceIndex == 4 ? frameToUse : 7),  tileTexCoordsTriangle[result][1] + 4);
                    break;
                case 1: GX_Color4u8(255, 171, 224, 255);
                    break;
                case 2: GX_Color4u8(255, 171, 224, 255);
                    break;
                case 3: GX_Color4u8(204, 0, 21, 255);
                    break;
                case 4: GX_Color4u8(204, 0, 21, 255);
                    break;
                default: ;
            }
        }
        GX_End();
    }
}
#endif

static void drawKirby(Mtx& modelToFill, u8 offset) {
#ifdef KIRBY_IN_DISPLAY_LIST
    drawKirbyForDisplayList(modelToFill, offset);
#else
    drawKirbyDirect(modelToFill);
#endif
}

static void initKirby() {
#ifdef KIRBY_IN_DISPLAY_LIST
    //Kirby Body 
    kirbyTexCoords[0]  = 1 + kirbyColumnTexture;   kirbyTexCoords[1]  = 1 + kirbyRowTexture;
    kirbyTexCoords[2]  = 1 + kirbyColumnTexture;   kirbyTexCoords[3]  = 0 + kirbyRowTexture;
    kirbyTexCoords[4]  = 0 + kirbyColumnTexture;   kirbyTexCoords[5]  = 0 + kirbyRowTexture;
    kirbyTexCoords[6]  = 1 + kirbyColumnTexture;   kirbyTexCoords[7]  = 1 + kirbyRowTexture;
    kirbyTexCoords[8]  = 0 + kirbyColumnTexture;   kirbyTexCoords[9]  = 0 + kirbyRowTexture;
    kirbyTexCoords[10] = 0 + kirbyColumnTexture;   kirbyTexCoords[11] = 1 + kirbyRowTexture;
    //Kirby Face (Blink Anim)
    kirbyTexCoords[12]  = 1 + frameToUse;   kirbyTexCoords[13]  = 1 + kirbyRowTexture;
    kirbyTexCoords[14]  = 1 + frameToUse;   kirbyTexCoords[15]  = 0 + kirbyRowTexture;
    kirbyTexCoords[16]  = 0 + frameToUse;   kirbyTexCoords[17]  = 0 + kirbyRowTexture;
    kirbyTexCoords[18]  = 1 + frameToUse;   kirbyTexCoords[19]  = 1 + kirbyRowTexture;
    kirbyTexCoords[20]  = 0 + frameToUse;   kirbyTexCoords[21]  = 0 + kirbyRowTexture;
    kirbyTexCoords[22]  = 0 + frameToUse;   kirbyTexCoords[23]  = 1 + kirbyRowTexture;
    
    //The GX_TRIANGLES command takes up 3 bytes.
    U32 VertexMemory = 0;
    U32 entitiesToRender = N_INDICES * 5;
    
    VertexMemory += 3 * sizeof(f32); // 3->f32 for positions
#ifndef OPTIMIZATION_NO_LIGHTNING_DATA
    VertexMemory += 3 * sizeof(f32); // 3->f32 for normals
#endif
    VertexMemory += 2 * sizeof(u8);  // 2->u8 for texture coords
    VertexMemory += 20;
    
    //Said by GX Documentation, an extra 63 bytes are needed.
    U32 listSize = 3 + entitiesToRender * VertexMemory + 63;
    //The list size also must be a multiple of 32, so round up to the next multiple of 32.
    //2 Options to Round Up:
    //listSize = round_up(listSize, 32);
    listSize = (listSize + 31) & ~31;   //Round up to a multiple of 32
    displayList = memalign(32, listSize);
    //Remove this block of memory from the CPU's cache because the write gather pipe is used to write the commands
    DCInvalidateRange(displayList, listSize);
    
    GX_BeginDispList(displayList, listSize);

    drawKirbyForDisplayListInside();

    displayListSize = GX_EndDispList();
    assert(displayListSize != 0);
#endif
}

#ifdef KIRBY_IN_DISPLAY_LIST
static void freeKirby() {
    if(displayList != nullptr) {
        DCFlushRange(displayList, displayListSize);
        free(displayList);
        displayList = nullptr;
    }
}
#endif

static void updateKirbyPosition(kirbyInfo& info, cfloat dt, cfloat speed = 2.5f, uint8_t controller = 1) {
    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_UP)     info.Position.z-= dt * speed;
    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_DOWN)   info.Position.z+= dt * speed;
    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_RIGHT)  info.Position.x+= dt * speed;
    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_LEFT)   info.Position.x-= dt * speed;

    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_A)      info.Position.y+= dt * speed;
    if(PAD_ButtonsHeld(controller) & PAD_BUTTON_B)      info.Position.y-= dt * speed;

    float joystickLeftX = static_cast<float>(PAD_SubStickX(controller)) / 128.0f; // Normalize between -1 and 1
    float joystickLeftY = static_cast<float>(PAD_SubStickY(controller)) / 128.0f; // Normalize between -1 and 1
    
    if (joystickLeftY > 0.1f)  info.Rotation.z += dt * speed * 1.5f;
    if (joystickLeftY < -0.1f) info.Rotation.z -= dt * speed * 1.5f;
    if (joystickLeftX > 0.1f)  info.Rotation.x -= dt * speed * 1.5f;
    if (joystickLeftX < -0.1f) info.Rotation.x += dt * speed * 1.5f;

    if(PAD_ButtonsHeld(controller) & PAD_TRIGGER_L) info.Rotation.y-= dt * speed * 1.5f;
    if(PAD_ButtonsHeld(controller) & PAD_TRIGGER_R) info.Rotation.y+= dt * speed * 1.5f;
    
    if(PAD_ButtonsDown(controller) & PAD_BUTTON_START) info.Rotation = FVec3(0, -90, 0);
}

#endif


